{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","Math","floor","random","alt","monstor","name","email","CardList","monstors","map","i","SearchBox","placeholder","handleChange","type","onChange","App","state","searchText","fetch","then","response","json","users","setState","this","filteredMonstors","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAkBeA,G,YAdF,SAAAC,GACT,OACI,sBAAKC,UAAU,OAAf,UACI,qBACIC,IAAG,mCAA8BC,KAAKC,MAClCD,KAAKE,SAAWF,KAAKC,MAAM,MAD5B,YAGHE,IAAI,UAER,6BAAKN,EAAMO,QAAQC,OACnB,gCAAQR,EAAMO,QAAQE,aCAnBC,G,MAVE,SAAAV,GACb,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMW,SAASC,KAAI,SAACL,EAASM,GAAV,OAChB,cAAC,EAAD,CAAcN,QAASA,GAAZM,UCNdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIf,UAAU,aACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCuCHG,E,kDAxCX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTT,SAAU,GACVU,WAAY,IALN,E,gEASO,IAAD,OAChBC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CAAEhB,SAAUe,S,+BAI5B,IAAD,SAC4BE,KAAKR,MAA9BT,EADH,EACGA,SAAUU,EADb,EACaA,WACZQ,EAAmBlB,EAASmB,QAAO,SAAAvB,GAAO,OAC5CA,EAAQC,KAAKuB,cAAcC,SAASX,EAAWU,kBAEnD,OACI,qBAAK9B,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,cAAC,EAAD,CACIc,YAAY,cACZC,aAAc,SAAAiB,GAAC,OACX,EAAKN,SAAS,CACVN,WAAYY,EAAEC,OAAOC,WAIjC,cAAC,EAAD,CAAUxB,SAAUkB,a,GAlCtBO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.501cbc77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nconst Card = props => {\r\n    return (\r\n        <div className=\"card\">\r\n            <img\r\n                src={`https://picsum.photos/id/${Math.floor(\r\n                    Math.random() * Math.floor(999)\r\n                )}/275/280`}\r\n                alt=\"Image\"\r\n            />\r\n            <h3>{props.monstor.name}</h3>\r\n            <small>{props.monstor.email}</small>\r\n        </div>\r\n    );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monstors.map((monstor, i) => (\r\n                <Card key={i} monstor={monstor} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className=\"search-box\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n","import './App.css';\nimport { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monstors: [],\n            searchText: ''\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                this.setState({ monstors: users });\n            });\n    }\n\n    render() {\n        const { monstors, searchText } = this.state;\n        const filteredMonstors = monstors.filter(monstor =>\n            monstor.name.toLowerCase().includes(searchText.toLowerCase())\n        );\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <SearchBox\n                        placeholder=\"Search Pics\"\n                        handleChange={e =>\n                            this.setState({\n                                searchText: e.target.value\n                            })\n                        }\n                    />\n                    <CardList monstors={filteredMonstors} />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}